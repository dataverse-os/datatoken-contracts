/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  LensDataTokenFactory,
  LensDataTokenFactoryInterface,
} from "../../Lens/LensDataTokenFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "lensHub",
        type: "address",
      },
      {
        internalType: "address",
        name: "dataTokenHub",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "NotProfileOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initVars",
        type: "bytes",
      },
    ],
    name: "createDataToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initVars",
        type: "bytes",
      },
    ],
    name: "createDataTokenWithSig",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type LensDataTokenFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LensDataTokenFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LensDataTokenFactory__factory extends ContractFactory {
  constructor(...args: LensDataTokenFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    lensHub: string,
    dataTokenHub: string,
    overrides?: Overrides & { from?: string }
  ): Promise<LensDataTokenFactory> {
    return super.deploy(
      lensHub,
      dataTokenHub,
      overrides || {}
    ) as Promise<LensDataTokenFactory>;
  }
  override getDeployTransaction(
    lensHub: string,
    dataTokenHub: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(lensHub, dataTokenHub, overrides || {});
  }
  override attach(address: string): LensDataTokenFactory {
    return super.attach(address) as LensDataTokenFactory;
  }
  override connect(signer: Signer): LensDataTokenFactory__factory {
    return super.connect(signer) as LensDataTokenFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LensDataTokenFactoryInterface {
    return new utils.Interface(_abi) as LensDataTokenFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LensDataTokenFactory {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as LensDataTokenFactory;
  }
}
