/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  LensDataToken,
  LensDataTokenInterface,
  DataTypes,
} from "../../Lens/LensDataToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "dataTokenHub",
        type: "address",
      },
      {
        internalType: "string",
        name: "contentURI",
        type: "string",
      },
      {
        components: [
          {
            internalType: "address",
            name: "originalContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "profileId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pubId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "collectModule",
            type: "address",
          },
        ],
        internalType: "struct DataTypes.Metadata",
        name: "metadata",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedCollectWithSigData",
        type: "bytes",
      },
    ],
    name: "collect",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getContentURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDataTokenOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFeeRecipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMetadata",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "originalContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "profileId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "pubId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "collectModule",
            type: "address",
          },
        ],
        internalType: "struct DataTypes.Metadata",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isCollected",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162000d4f38038062000d4f833981016040819052620000349162000253565b8051600080546001600160a01b03199081166001600160a01b0393841617909155602080840151600155604080850151600255606085015160038054909416908516179092559185166080523360a05280518082019091528381524281830152835185928592859290918291600491620000b3918391880190620000ce565b50602082015181600101559050505050505050505062000378565b828054620000dc906200033b565b90600052602060002090601f0160209004810192826200010057600085556200014b565b82601f106200011b57805160ff19168380011785556200014b565b828001600101855582156200014b579182015b828111156200014b5782518255916020019190600101906200012e565b50620001599291506200015d565b5090565b5b808211156200015957600081556001016200015e565b80516001600160a01b03811681146200018c57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715620001d257620001d262000191565b604052919050565b600060808284031215620001ed57600080fd5b604051608081016001600160401b038111828210171562000212576200021262000191565b604052905080620002238362000174565b81526020830151602082015260408301516040820152620002476060840162000174565b60608201525092915050565b600080600060c084860312156200026957600080fd5b620002748462000174565b602085810151919450906001600160401b03808211156200029457600080fd5b818701915087601f830112620002a957600080fd5b815181811115620002be57620002be62000191565b620002d2601f8201601f19168501620001a7565b91508082528884828501011115620002e957600080fd5b60005b8181101562000309578381018501518382018601528401620002ec565b818111156200031b5760008583850101525b5050809450505050620003328560408601620001da565b90509250925092565b600181811c908216806200035057607f821691505b602082108114156200037257634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a0516109b46200039b6000396000505060006104a001526109b46000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80634ccb20c01461006757806377b46d4d1461008c5780637a5b4f59146100a157806383e46e78146100675780639824aab514610142578063a9b5ffd914610165575b600080fd5b61006f61017a565b6040516001600160a01b0390911681526020015b60405180910390f35b610094610189565b60405161008391906105d5565b61010360408051608081018252600080825260208201819052918101829052606081019190915250604080516080810182526000546001600160a01b039081168252600154602083015260025492820192909252600354909116606082015290565b604051610083919081516001600160a01b0390811682526020808401519083015260408084015190830152606092830151169181019190915260800190565b610155610150366004610607565b61021e565b6040519015158152602001610083565b6101786101733660046106bc565b61035f565b005b6000610184610502565b905090565b60606004600001805461019b9061073c565b80601f01602080910402602001604051908101604052809291908181526020018280546101c79061073c565b80156102145780601f106101e957610100808354040283529160200191610214565b820191906000526020600020905b8154815290600101906020018083116101f757829003601f168201915b5050505050905090565b600061022861017a565b6001600160a01b0316826001600160a01b0316141561024957506001919050565b600080546001546002546040516352aaef5560e01b8152600481019290925260248201526001600160a01b03909116906352aaef5590604401602060405180830381865afa15801561029f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c39190610777565b90506001600160a01b0381161580159061034857506040516370a0823160e01b81526001600160a01b038481166004830152600091908316906370a0823190602401602060405180830381865afa158015610322573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103469190610794565b115b156103565750600192915050565b50600092915050565b6000818060200190518101906103759190610824565b60008054604051632d22547960e21b815292935090916001600160a01b039091169063b48951e4906103ab908590600401610903565b6020604051808303816000875af11580156103ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ee9190610794565b600080546001546002546040516352aaef5560e01b81526004810192909252602482015292935090916001600160a01b03909116906352aaef5590604401602060405180830381865afa158015610449573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046d9190610777565b83516040516367b8366160e11b81526001600160a01b0391821660048201528183166024820152604481018590529192507f0000000000000000000000000000000000000000000000000000000000000000169063cf706cc290606401600060405180830381600087803b1580156104e457600080fd5b505af11580156104f8573d6000803e3d6000fd5b5050505050505050565b600080546001546040516331a9108f60e11b81526001600160a01b0390921691636352211e916105389160040190815260200190565b602060405180830381865afa158015610555573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101849190610777565b60005b8381101561059457818101518382015260200161057c565b838111156105a3576000848401525b50505050565b600081518084526105c1816020860160208601610579565b601f01601f19169290920160200192915050565b6020815260006105e860208301846105a9565b9392505050565b6001600160a01b038116811461060457600080fd5b50565b60006020828403121561061957600080fd5b81356105e8816105ef565b634e487b7160e01b600052604160045260246000fd5b60405160a0810167ffffffffffffffff8111828210171561065d5761065d610624565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561068c5761068c610624565b604052919050565b600067ffffffffffffffff8211156106ae576106ae610624565b50601f01601f191660200190565b6000602082840312156106ce57600080fd5b813567ffffffffffffffff8111156106e557600080fd5b8201601f810184136106f657600080fd5b803561070961070482610694565b610663565b81815285602083850101111561071e57600080fd5b81602084016020830137600091810160200191909152949350505050565b600181811c9082168061075057607f821691505b6020821081141561077157634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561078957600080fd5b81516105e8816105ef565b6000602082840312156107a657600080fd5b5051919050565b6000608082840312156107bf57600080fd5b6040516080810181811067ffffffffffffffff821117156107e2576107e2610624565b8060405250809150825160ff811681146107fb57600080fd5b808252506020830151602082015260408301516040820152606083015160608201525092915050565b6000602080838503121561083757600080fd5b825167ffffffffffffffff8082111561084f57600080fd5b90840190610100828703121561086457600080fd5b61086c61063a565b8251610877816105ef565b815282840151848201526040808401519082015260608301518281111561089d57600080fd5b83019150601f820187136108b057600080fd5b81516108be61070482610694565b81815288868386010111156108d257600080fd5b6108e182878301888701610579565b6060830152506108f487608085016107ad565b60808201529695505050505050565b6020815260018060a01b0382511660208201526020820151604082015260408201516060820152600060608301516101008060808501526109486101208501836105a9565b60809590950151805160ff1660a0860152602081015160c0860152604081015160e086015260600151930192909252509091905056fea26469706673582212207c55c1566c4bd8419b9eaaed931d714ee5bf3dc40765336011b18313e3bb04c064736f6c634300080a0033";

type LensDataTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LensDataTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LensDataToken__factory extends ContractFactory {
  constructor(...args: LensDataTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    dataTokenHub: string,
    contentURI: string,
    metadata: DataTypes.MetadataStruct,
    overrides?: Overrides & { from?: string }
  ): Promise<LensDataToken> {
    return super.deploy(
      dataTokenHub,
      contentURI,
      metadata,
      overrides || {}
    ) as Promise<LensDataToken>;
  }
  override getDeployTransaction(
    dataTokenHub: string,
    contentURI: string,
    metadata: DataTypes.MetadataStruct,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      dataTokenHub,
      contentURI,
      metadata,
      overrides || {}
    );
  }
  override attach(address: string): LensDataToken {
    return super.attach(address) as LensDataToken;
  }
  override connect(signer: Signer): LensDataToken__factory {
    return super.connect(signer) as LensDataToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LensDataTokenInterface {
    return new utils.Interface(_abi) as LensDataTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LensDataToken {
    return new Contract(address, _abi, signerOrProvider) as LensDataToken;
  }
}
