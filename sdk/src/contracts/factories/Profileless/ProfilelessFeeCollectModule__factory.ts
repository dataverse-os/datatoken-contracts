/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ProfilelessFeeCollectModule,
  ProfilelessFeeCollectModuleInterface,
} from "../../Profileless/ProfilelessFeeCollectModule";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "dataTokenHub",
        type: "address",
      },
      {
        internalType: "address",
        name: "dataTokenFactory",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ExceedCollectLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "InitParamsInvalid",
    type: "error",
  },
  {
    inputs: [],
    name: "ModuleDataMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "NotDataToken",
    type: "error",
  },
  {
    inputs: [],
    name: "NotDataTokenFactory",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "DATA_TOKEN_FACTORY",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getPublicationData",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "collectLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentCollects",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "address",
            name: "dataToken",
            type: "address",
          },
        ],
        internalType: "struct ProfilePublicationData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pubId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "dataToken",
        type: "address",
      },
    ],
    name: "initializePublicationCollectModule",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "collector",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "processCollect",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b50604051610c80380380610c8083398101604081905261002f916100cb565b816001600160a01b0381166100575760405163d92e233d60e01b815260040160405180910390fd5b6001600160a01b03811660808190526040514281523091907f213b4ba07a9aad6d172d6d0f3b50e21dd91cd355250728595d496383b274631a9060200160405180910390a3506001600160a01b031660a052506100fe565b80516001600160a01b03811681146100c657600080fd5b919050565b600080604083850312156100de57600080fd5b6100e7836100af565b91506100f5602084016100af565b90509250929050565b60805160a051610b5a61012660003960008181606b01526101b6015260005050610b5a6000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063075b90de146100515780632c64fd1214610066578063948643aa146100aa578063cec5d504146100ca575b600080fd5b61006461005f3660046108f4565b610135565b005b61008d7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100bd6100b8366004610950565b6101a9565b6040516100a19190610a07565b6100dd6100d8366004610a1a565b6103af565b6040516100a191908151815260208083015190820152604080830151908201526060808301516001600160a01b039081169183019190915260808084015182169083015260a092830151169181019190915260c00190565b8361013f8161041f565b60008581526001602081905260409091208054910154106101735760405163ad65a96360e01b815260040160405180910390fd5b6000858152600160208190526040822001805490919061019290610a49565b909155506101a28486858561045c565b5050505050565b6060336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101f457604051630367e9b160e51b815260040160405180910390fd5b600080808061020587890189610a64565b9350935093509350836000148061021a575082155b15610238576040516348be0eb360e01b815260040160405180910390fd5b610240610845565b84816000018181525050838160400181815250508281606001906001600160a01b031690816001600160a01b0316815250508181608001906001600160a01b031690816001600160a01b031681525050868160a001906001600160a01b031690816001600160a01b03168152505080600160008c815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060808201518160040160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060a08201518160050160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555090505088888080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929d9c50505050505050505050505050565b6103b7610845565b50600090815260016020818152604092839020835160c08101855281548152928101549183019190915260028101549282019290925260038201546001600160a01b03908116606083015260048301548116608083015260059092015490911660a082015290565b6000818152600160205260409020600501546001600160a01b03163314610459576040516338c5848360e11b815260040160405180910390fd5b50565b60008381526001602052604090206003810154600282015461048b91859185916001600160a01b03169061052c565b60008481526002602090815260408083206001600160a01b038916845290915290205460ff16156104e55760008481526002602090815260408083206001600160a01b03891684529091529020805460ff191690556101a2565b6000808183600201546104f89190610aa3565b905080156105235760048301546003840154610523916001600160a01b03918216918a911684610586565b50505050505050565b60008061053b85870187610aba565b9150915082811415806105605750836001600160a01b0316826001600160a01b031614155b1561057e576040516346308bd560e01b815260040160405180910390fd5b505050505050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526105e09085906105e6565b50505050565b600061063b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166106c29092919063ffffffff16565b8051909150156106bd57808060200190518101906106599190610ae6565b6106bd5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084015b60405180910390fd5b505050565b60606106d184846000856106db565b90505b9392505050565b60608247101561073c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016106b4565b6001600160a01b0385163b6107935760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016106b4565b600080866001600160a01b031685876040516107af9190610b08565b60006040518083038185875af1925050503d80600081146107ec576040519150601f19603f3d011682016040523d82523d6000602084013e6107f1565b606091505b509150915061080182828661080c565b979650505050505050565b6060831561081b5750816106d4565b82511561082b5782518084602001fd5b8160405162461bcd60e51b81526004016106b49190610a07565b6040518060c0016040528060008152602001600081526020016000815260200160006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b031681525090565b6001600160a01b038116811461045957600080fd5b60008083601f8401126108bd57600080fd5b50813567ffffffffffffffff8111156108d557600080fd5b6020830191508360208285010111156108ed57600080fd5b9250929050565b6000806000806060858703121561090a57600080fd5b84359350602085013561091c81610896565b9250604085013567ffffffffffffffff81111561093857600080fd5b610944878288016108ab565b95989497509550505050565b6000806000806060858703121561096657600080fd5b84359350602085013567ffffffffffffffff81111561098457600080fd5b610990878288016108ab565b90945092505060408501356109a481610896565b939692955090935050565b60005b838110156109ca5781810151838201526020016109b2565b838111156105e05750506000910152565b600081518084526109f38160208601602086016109af565b601f01601f19169290920160200192915050565b6020815260006106d460208301846109db565b600060208284031215610a2c57600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b6000600019821415610a5d57610a5d610a33565b5060010190565b60008060008060808587031215610a7a57600080fd5b84359350602085013592506040850135610a9381610896565b915060608501356109a481610896565b600082821015610ab557610ab5610a33565b500390565b60008060408385031215610acd57600080fd5b8235610ad881610896565b946020939093013593505050565b600060208284031215610af857600080fd5b815180151581146106d457600080fd5b60008251610b1a8184602087016109af565b919091019291505056fea2646970667358221220134d104bab5c41b313e822f359fe1f7f67ec5bc534ad808e514f2779a9949c3764736f6c634300080a0033";

type ProfilelessFeeCollectModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ProfilelessFeeCollectModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ProfilelessFeeCollectModule__factory extends ContractFactory {
  constructor(...args: ProfilelessFeeCollectModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    dataTokenHub: string,
    dataTokenFactory: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ProfilelessFeeCollectModule> {
    return super.deploy(
      dataTokenHub,
      dataTokenFactory,
      overrides || {}
    ) as Promise<ProfilelessFeeCollectModule>;
  }
  override getDeployTransaction(
    dataTokenHub: string,
    dataTokenFactory: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      dataTokenHub,
      dataTokenFactory,
      overrides || {}
    );
  }
  override attach(address: string): ProfilelessFeeCollectModule {
    return super.attach(address) as ProfilelessFeeCollectModule;
  }
  override connect(signer: Signer): ProfilelessFeeCollectModule__factory {
    return super.connect(signer) as ProfilelessFeeCollectModule__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProfilelessFeeCollectModuleInterface {
    return new utils.Interface(_abi) as ProfilelessFeeCollectModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProfilelessFeeCollectModule {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ProfilelessFeeCollectModule;
  }
}
